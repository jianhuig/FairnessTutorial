data = results_df
nrow(results_df)
get_tpr(data = data, outcome = outcome, group = group, probs = probs,
cutoff = cutoff)
tpr <- get_tpr(data = data, outcome = outcome, group = group, probs = probs,
cutoff = cutoff)
tpr_se <- lapply(1:bootstraps, function(j) {
data_boot <- data[sample(nrow(data), replace = TRUE), ]
get_tpr(data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff)
}) %>%
do.call(rbind, .) %>%
dplyr::group_by(!!rlang::sym(group)) %>%
dplyr::summarize_all(stats::sd) %>%
dplyr::rename(se = tpr)
tpr %>%
dplyr::left_join(tpr_se, by = group) %>%
dplyr::mutate(tpr_lower = tpr - 1.96 * se,
tpr_upper = tpr + 1.96 * se) %>%
dplyr::select(!!rlang::sym(group), tpr, confint_lower, confint_upper)
tpr %>%
dplyr::left_join(tpr_se, by = group) %>%
dplyr::mutate(tpr_lower = tpr - 1.96 * se,
tpr_upper = tpr + 1.96 * se)
tpr %>%
dplyr::left_join(tpr_se, by = group) %>%
dplyr::mutate(tpr_lower = tpr - 1.96 * se,
tpr_upper = tpr + 1.96 * se) %>%
dplyr::select(!!rlang::sym(group), tpr, tpr_lower, tpr_upper) %>%
dplyr::mutate(fnr = 1 - tpr,
fnr_lower = 1 - tpr_upper,
fnr_upper = 1 - tpr_lower)
tpr %>%
dplyr::left_join(tpr_se, by = group) %>%
dplyr::mutate(tpr_lower = tpr - 1.96 * se,
tpr_upper = tpr + 1.96 * se) %>%
dplyr::select(!!rlang::sym(group), tpr, tpr_lower, tpr_upper) %>%
dplyr::mutate(fnr = 1 - tpr,
fnr_lower = 1 - tpr_upper,
fnr_upper = 1 - tpr_lower,
tpr_ci = paste0(round(tpr_lower, 3), ", ",
round(tpr_upper, 3)),
fnr_ci = paste0(round(fnr_lower, 3), ", ",
round(fnr_upper, 3))) %>%
dplyr::select(!!rlang::sym(group), tpr, fnr, tpr_ci, fnr_ci)
tpr %>%
dplyr::left_join(tpr_se, by = group) %>%
dplyr::mutate(tpr_lower = tpr - 1.96 * se,
tpr_upper = tpr + 1.96 * se) %>%
dplyr::select(!!rlang::sym(group), tpr, tpr_lower, tpr_upper) %>%
dplyr::mutate(fnr = 1 - tpr,
fnr_lower = 1 - tpr_upper,
fnr_upper = 1 - tpr_lower,
tpr_ci = paste0("[",round(tpr_lower, 2), ", ",
round(tpr_upper, 2),"]"),
fnr_ci = paste0("[",round(fnr_lower, 2), ", ",
round(fnr_upper, 2),"]")) %>%
dplyr::select(!!rlang::sym(group), tpr, fnr, tpr_ci, fnr_ci)
styler:::style_active_file()
tpr
tpr %>%
dplyr::left_join(tpr_se, by = group) %>%
dplyr::mutate(
tpr_lower = tpr - 1.96 * se,
tpr_upper = tpr + 1.96 * se
) %>%
dplyr::select(!!rlang::sym(group), tpr, tpr_lower, tpr_upper) %>%
dplyr::mutate(
tpr_ci = paste0(
round(tpr_lower * 100, 1), "% - ", round(tpr_upper * 100, 1), "%"
)
)
tpr %>%
dplyr::left_join(tpr_se, by = group) %>%
dplyr::mutate(
tpr_lower = tpr - 1.96 * se,
tpr_upper = tpr + 1.96 * se
) %>%
dplyr::select(!!rlang::sym(group), tpr, tpr_lower, tpr_upper) %>%
dplyr::mutate(
tpr_ci = paste0("[", round(tpr_lower, 3), ", ", round(tpr_upper, 3), "]")
)
tpr %>%
dplyr::left_join(tpr_se, by = group) %>%
dplyr::mutate(
tpr_lower = tpr - 1.96 * se,
tpr_upper = tpr + 1.96 * se
) %>%
dplyr::select(!!rlang::sym(group), tpr, tpr_lower, tpr_upper) %>%
dplyr::mutate(
tpr_ci = paste0("[", round(tpr_lower, 3), ", ", round(tpr_upper, 3), "]")
) %>%
dplyr::select(-tpr_lower, -tpr_upper)
tpr
styler:::style_active_file()
get_fpr <- function(data, outcome, group, probs, cutoff = 0.5) {
# Convert strings to symbols if necessary
outcome_sym <- rlang::sym(outcome)
group_sym <- rlang::sym(group)
probs_sym <- rlang::sym(probs)
# Calculate FPR
result <- data %>%
dplyr::filter(!!outcome_sym == 0) %>%
dplyr::group_by(!!group_sym) %>%
dplyr::summarize(fpr = mean(!!probs_sym >= cutoff), .groups = 'drop')
return(result)
}
tpr <- get_tpr(
data = data, outcome = outcome, group = group, probs = probs,
cutoff = cutoff
)
fpr <- get_fpr(
data = data, outcome = outcome, group = group, probs = probs,
cutoff = cutoff
)
tpr
fpr
tpr_se <- lapply(1:bootstraps, function(j) {
data_boot <- data[sample(nrow(data), replace = TRUE), ]
get_tpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
}) %>%
do.call(rbind, .) %>%
dplyr::group_by(!!rlang::sym(group)) %>%
dplyr::summarize_all(stats::sd) %>%
dplyr::rename(se = tpr)
tpr_se <- get_tpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
tpr_se <- get_tpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
data_boot <- data[sample(nrow(data), replace = TRUE), ]
tpr_se <- get_tpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
tpr_se
fpr_se <- get_fpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
tpr_se
fpr_se
lapply(1:bootstraps, function(j) {
data_boot <- data[sample(nrow(data), replace = TRUE), ]
tpr_se <- get_tpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
fpr_se <- get_fpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
cbind(tpr_se, fpr_se[,-1])
})
se <- lapply(1:bootstraps, function(j) {
data_boot <- data[sample(nrow(data), replace = TRUE), ]
tpr_se <- get_tpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
fpr_se <- get_fpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
cbind(tpr_se, fpr_se[,-1])
}) %>%
do.call(rbind, .) %>%
dplyr::group_by(!!rlang::sym(group)) %>%
dplyr::summarize_all(stats::sd) %>%
dplyr::rename(se_tpr = tpr, se_fpr = fpr)
se
tpr
fpr
cbind(tpr, fpr[-1])
cbind(tpr, fpr[-1]) %>%
dplyr::inner_join(se, by = group) %>%
dplyr::mutate(
tpr_lower = tpr - 1.96 * se_tpr,
tpr_upper = tpr + 1.96 * se_tpr,
fpr_lower = fpr - 1.96 * se_fpr,
fpr_upper = fpr + 1.96 * se_fpr
) %>%
dplyr::select(!!rlang::sym(group), tpr, tpr_lower, tpr_upper,
fpr, fpr_lower, fpr_upper) %>%
dplyr::mutate(
tpr_ci = paste0("[", round(tpr_lower, 3), ", ", round(tpr_upper, 3), "]"),
fpr_ci = paste0("[", round(fpr_lower, 3), ", ", round(fpr_upper, 3), "]")
) %>%
dplyr::select(-tpr_lower, -tpr_upper, -fpr_lower, -fpr_upper)
logit <- function(x) {
log(x / (1 - x))
}
expit <- function(x) {
1 / (1 + exp(-x))
}
tpr_se <- lapply(1:bootstraps, function(j) {
data_boot <- data[sample(nrow(data), replace = TRUE), ]
get_tpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
}) %>%
do.call(rbind, .) %>%
dplyr::group_by(!!rlang::sym(group)) %>%
dplyr::summarize_all(function(x) stats::sd(logit(x))) %>%
dplyr::rename(se = tpr)
tpr_se
tpr %>%
dplyr::left_join(tpr_se, by = group) %>%
dplyr::mutate(
tpr_lower = expit(logit(tpr) - 1.96 * se),
tpr_upper = expit(logit(tpr) + 1.96 * se)
) %>%
dplyr::select(!!rlang::sym(group), tpr, tpr_lower, tpr_upper) %>%
dplyr::mutate(
tpr_ci = paste0("[", round(tpr_lower, 3), ", ", round(tpr_upper, 3), "]")
) %>%
dplyr::select(-tpr_lower, -tpr_upper)
tpr_se <- lapply(1:bootstraps, function(j) {
data_boot <- data[sample(nrow(data), replace = TRUE), ]
get_tpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
}) %>%
do.call(rbind, .) %>%
dplyr::group_by(!!rlang::sym(group)) %>%
dplyr::summarize_all(function(x) stats::sd(logit(x))) %>%
dplyr::rename(se = tpr)
tpr %>%
dplyr::left_join(tpr_se, by = group) %>%
dplyr::mutate(
tpr_lower = expit(logit(tpr) - 1.96 * se),
tpr_upper = expit(logit(tpr) + 1.96 * se)
) %>%
dplyr::select(!!rlang::sym(group), tpr, tpr_lower, tpr_upper) %>%
dplyr::mutate(
tpr_ci = paste0("[", round(tpr_lower, 3), ", ", round(tpr_upper, 3), "]")
) %>%
dplyr::select(-tpr_lower, -tpr_upper)
se <- lapply(1:bootstraps, function(j) {
data_boot <- data[sample(nrow(data), replace = TRUE), ]
tpr_se <- get_tpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
fpr_se <- get_fpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
cbind(tpr_se, fpr_se[,-1])
}) %>%
do.call(rbind, .) %>%
dplyr::group_by(!!rlang::sym(group)) %>%
dplyr::summarize_all(function(x) stats::sd(logit(x))) %>%
dplyr::rename(se_tpr = tpr, se_fpr = fpr)
se
logit <- function(x) {
# Add a small value to x and 1 - x to avoid taking log(0)
epsilon = 1e-6
x = max(min(x, 1 - epsilon), epsilon)  # Limit p to the range [epsilon, 1 - epsilon]
log(x / (1 - x))
}
se <- lapply(1:bootstraps, function(j) {
data_boot <- data[sample(nrow(data), replace = TRUE), ]
tpr_se <- get_tpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
fpr_se <- get_fpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
cbind(tpr_se, fpr_se[,-1])
}) %>%
do.call(rbind, .) %>%
dplyr::group_by(!!rlang::sym(group)) %>%
dplyr::summarize_all(function(x) stats::sd(logit(x))) %>%
dplyr::rename(se_tpr = tpr, se_fpr = fpr)
se
se <- lapply(1:bootstraps, function(j) {
data_boot <- data[sample(nrow(data), replace = TRUE), ]
tpr_se <- get_tpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
fpr_se <- get_fpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
cbind(tpr_se, fpr_se[,-1])
}) %>%
do.call(rbind, .) %>%
dplyr::group_by(!!rlang::sym(group))
se
logit(0.170)
se %>%
dplyr::summarize_all(function(x) stats::sd(logit(x)))
summary(se$tpr)
logit(0)
se %>%
dplyr::summarize_all(function(x) stats::sd(x))
summary(logit(se$tpr))
logit <- function(x) {
# Add a small value to x and 1 - x to avoid taking log(0)
epsilon = 1e-6
if(x == 0){ x <- x + epsilon }
if(x == 1){ x <- x - epsilon }
log(x / (1 - x))
}
se <- lapply(1:bootstraps, function(j) {
data_boot <- data[sample(nrow(data), replace = TRUE), ]
tpr_se <- get_tpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
fpr_se <- get_fpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
cbind(tpr_se, fpr_se[,-1])
}) %>%
do.call(rbind, .) %>%
dplyr::group_by(!!rlang::sym(group)) %>%
dplyr::summarize_all(function(x) stats::sd(logit(x))) %>%
dplyr::rename(se_tpr = tpr, se_fpr = fpr)
se
lapply(1:bootstraps, function(j) {
data_boot <- data[sample(nrow(data), replace = TRUE), ]
tpr_se <- get_tpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
fpr_se <- get_fpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
cbind(tpr_se, fpr_se[,-1])
}) %>%
do.call(rbind, .) %>%
dplyr::group_by(!!rlang::sym(group)) %>%
dplyr::summarize_all(function(x) stats::sd(logit(x)))
logit <- function(x) {
# Add a small value to x and 1 - x to avoid taking log(0)
epsilon = 1e-6
if(x == 0){ x <- x + epsilon }
if(x == 1){ x <- x - epsilon }
log(x / (1 - x))
}
lapply(1:bootstraps, function(j) {
data_boot <- data[sample(nrow(data), replace = TRUE), ]
tpr_se <- get_tpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
fpr_se <- get_fpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
cbind(tpr_se, fpr_se[,-1])
}) %>%
do.call(rbind, .) %>%
dplyr::group_by(!!rlang::sym(group)) %>%
dplyr::summarize_all(function(x) stats::sd(logit(x)))
lapply(1:bootstraps, function(j) {
data_boot <- data[sample(nrow(data), replace = TRUE), ]
tpr_se <- get_tpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
fpr_se <- get_fpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
cbind(tpr_se, fpr_se[,-1])
}) %>%
do.call(rbind, .) %>%
dplyr::group_by(!!rlang::sym(group))
summary(logit(se$tpr))
logit(se$tpr)
lapply(1:bootstraps, function(j) {
data_boot <- data[sample(nrow(data), replace = TRUE), ]
tpr_se <- get_tpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
fpr_se <- get_fpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
cbind(tpr_se, fpr_se[,-1])
}) %>%
do.call(rbind, .) %>%
dplyr::group_by(!!rlang::sym(group))%>%
dplyr::summarize_all(~stats::sd(logit(.)))
logit <- function(p) {
epsilon = 1e-6
# Ensure p is not exactly 0 or 1 by adding or subtracting epsilon
p = ifelse(p <= epsilon, epsilon, ifelse(p >= 1 - epsilon, 1 - epsilon, p))
return(log(p / (1 - p)))
}
lapply(1:bootstraps, function(j) {
data_boot <- data[sample(nrow(data), replace = TRUE), ]
tpr_se <- get_tpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
fpr_se <- get_fpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
cbind(tpr_se, fpr_se[,-1])
}) %>%
do.call(rbind, .) %>%
dplyr::group_by(!!rlang::sym(group)) %>%
dplyr::summarize_all(function(x) stats::sd(logit(x)))
se <- lapply(1:bootstraps, function(j) {
data_boot <- data[sample(nrow(data), replace = TRUE), ]
tpr_se <- get_tpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
fpr_se <- get_fpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
cbind(tpr_se, fpr_se[,-1])
}) %>%
do.call(rbind, .) %>%
dplyr::group_by(!!rlang::sym(group)) %>%
dplyr::summarize_all(~stats::sd(logit(.))) %>%
dplyr::rename(se_tpr = tpr, se_fpr = fpr)
cbind(tpr, fpr[-1]) %>%
dplyr::inner_join(se, by = group) %>%
dplyr::mutate(
tpr_lower = expit(logit(tpr) - 1.96 * se_tpr),
tpr_upper = expit(logit(tpr) + 1.96 * se_tpr),
fpr_lower = expit(logit(fpr) - 1.96 * se_fpr),
fpr_upper = expit(logit(fpr) + 1.96 * se_fpr)
) %>%
dplyr::select(!!rlang::sym(group), tpr, tpr_lower, tpr_upper,
fpr, fpr_lower, fpr_upper) %>%
dplyr::mutate(
tpr_ci = paste0("[", round(tpr_lower, 3), ", ", round(tpr_upper, 3), "]"),
fpr_ci = paste0("[", round(fpr_lower, 3), ", ", round(fpr_upper, 3), "]")
) %>%
dplyr::select(-tpr_lower, -tpr_upper, -fpr_lower, -fpr_upper)
# Calculate confidence interval
if (confint) {
se <- lapply(1:bootstraps, function(j) {
data_boot <- data[sample(nrow(data), replace = TRUE), ]
tpr_se <- get_tpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
fpr_se <- get_fpr(
data = data_boot, outcome = outcome, group = group,
probs = probs, cutoff = cutoff
)
cbind(tpr_se, fpr_se[,-1])
}) %>%
do.call(rbind, .) %>%
dplyr::group_by(!!rlang::sym(group)) %>%
dplyr::summarize_all(~stats::sd(logit(.))) %>%
dplyr::rename(se_tpr = tpr, se_fpr = fpr)
cbind(tpr, fpr[-1]) %>%
dplyr::inner_join(se, by = group) %>%
dplyr::mutate(
tpr_lower = expit(logit(tpr) - 1.96 * se_tpr),
tpr_upper = expit(logit(tpr) + 1.96 * se_tpr),
fpr_lower = expit(logit(fpr) - 1.96 * se_fpr),
fpr_upper = expit(logit(fpr) + 1.96 * se_fpr)
) %>%
dplyr::select(!!rlang::sym(group), tpr, tpr_lower, tpr_upper,
fpr, fpr_lower, fpr_upper) %>%
dplyr::mutate(
tpr_ci = paste0("[", round(tpr_lower, 3), ", ", round(tpr_upper, 3), "]"),
fpr_ci = paste0("[", round(fpr_lower, 3), ", ", round(fpr_upper, 3), "]")
) %>%
dplyr::select(-tpr_lower, -tpr_upper, -fpr_lower, -fpr_upper)
} else {
return(cbind(tpr, fpr[-1]))
}
return(cbind(tpr, fpr[-1]))
devtools:::document()
styler:::style_active_pkg()
devtools:::document()
devtools:::document()
rm(list = c("equal_opportunity"))
devtools:::document()
devtools:::document()
warnings()
styler:::style_active_file()
styler:::style_active_pkg()
devtools::check()
warnings()
notes()
devtools:::document()
warnings
warnings()
pkgdown:::build_site_external()
devtools:::document()
warnings()
usethis::use_testthat()
use_test()
usethis::use_test()
